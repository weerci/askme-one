; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "Askme"
#define MyAppVersion "2.0.0.0"
#define MyAppPublisher "CoreLab"
#define MyAppURL "http://code.google.com/p/askme-one/downloads/list"
#define MyAppExeName "Askme.exe"
#define MyAppID "A1E243A3-C2AB-496D-B9D3-BD69125ED4D8"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={#MyAppID}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={pf}\Askme
DefaultGroupName=Askme
OutputDir=D:\datadi\programming\exe\askme-one
SourceDir=D:\datadi\programming\exe\askme-one
OutputBaseFilename=askme-one_v2_0
SetupIconFile=D:\datadi\programming\src\askme-one\res\Go.ico
Compression=lzma
SolidCompression=true

[Tasks]
Name: desktopicon; Description: {cm:CreateDesktopIcon}; GroupDescription: {cm:AdditionalIcons}; 
Name: quicklaunchicon; Description: {cm:CreateQuickLaunchIcon}; GroupDescription: {cm:AdditionalIcons}; Flags: unchecked

[Files]
Source: ISAlliance.dll; DestDir: {app};
Source: Askme.exe; DestDir: {app}; Flags: ignoreversion
Source: Askme.chm; DestDir: {app}; Flags: ignoreversion
Source: ICSharpCode.SharpZipLib.dll; DestDir: {app}; Flags: ignoreversion
Source: sysprop.dmp; DestDir: {app}; Flags: onlyifdoesntexist
Source: office\Codes_base.xlsx; DestDir: {app}\office; Flags: onlyifdoesntexist
Source: convert\ChkCountChanel.xslt; DestDir: {app}\convert; Flags: ignoreversion
Source: convert\extractXlsxData.xslt; DestDir: {app}\convert; Flags: ignoreversion
Source: convert\ora_xslt.xslt; DestDir: {app}\convert; Flags: ignoreversion
Source: convert\xslt_result.xslt; DestDir: {app}\convert; Flags: ignoreversion
Source: convert\xslToRow.xslt; DestDir: {app}\convert; Flags: ignoreversion
Source: Devart.Data.Oracle.dll; DestDir: {app}; Flags: ignoreversion
Source: Devart.Data.dll; DestDir: {app}; Flags: ignoreversion

[Icons]
Name: {group}\Askme; Filename: {app}\Askme.exe
Name: {group}\{cm:UninstallProgram,Askme}; Filename: {uninstallexe}
Name: {commondesktop}\Askme; Filename: {app}\Askme.exe; Tasks: desktopicon
Name: {userappdata}\Microsoft\Internet Explorer\Quick Launch\Askme; Filename: {app}\Askme.exe; Tasks: quicklaunchicon

[Run]
Filename: {app}\Askme.exe; Description: {cm:LaunchProgram,Askme}; Flags: nowait postinstall skipifsilent
Filename: "dummy"; Description: "Загружать программу при старте ОС"; Flags: postinstall nowait skipifdoesntexist

[Dirs]
Name: {app}\resultFile; Flags: uninsalwaysuninstall
[UninstallDelete]
Name: {app}; Type: filesandordirs
[Code]
procedure KillProc(lpProcName: AnsiString); external 'KillProcess@{app}\ISAlliance.dll stdcall delayload uninstallonly';

procedure CurStepChanged(CurStep: TSetupStep);
var r: Integer;
begin
    if CurStep = ssInstall then
    begin
        Exec(ExpandConstant('{app}\unins000.exe'), '/VERYSILENT /SUPPRESSMSGBOXES', '', SW_SHOW, ewWaitUntilTerminated, r);
        // Дожидаемся завершения удаления...
        while CheckForMutexes('{#MyAppName}Mutex') do Sleep(100);
    end;

    if CurStep = ssDone then
        if WizardForm.RunList.Checked[1] then
            CreateShellLink(ExpandConstant('{userstartup}\{#MyAppName}.lnk'),
                            '',
                            ExpandConstant('{app}\{#MyAppExeName}'),
                            '',
                            ExpandConstant('{app}'),
                            '',
                            0,
                            SW_SHOW);
end;

procedure CurUninstallStepChanged(CurUninstallStep: TUninstallStep);
begin
  if CurUninstallStep = usUninstall then
  begin
    UnloadDLL(ExpandConstant('{app}\ISAlliance.dll'));
  end;
    if CurUninstallStep = usDone then
        DeleteFile(ExpandConstant('{userstartup}\{#MyAppName}.lnk'));
end;

function InitializeUninstall(): Boolean;
begin
  KillProc('{#MyAppExeName}');
  Result := true;
end;
